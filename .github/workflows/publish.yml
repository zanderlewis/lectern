name: Publish crate on release

on:
  release:
    types: [published]

jobs:
  publish:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Build (release)
        run: cargo build --release

      - name: Create package (.crate)
        run: |
          # cargo package creates a .crate in target/package
          cargo package --allow-dirty

      - name: Find crate file
        id: find_crate
        run: |
          set -e
          CRATE=$(ls target/package/*.crate | head -n 1)
          echo "crate=$CRATE" >> $GITHUB_OUTPUT

      - name: Upload crate to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.find_crate.outputs.crate }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to crates.io
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
        run: |
          echo "Publishing crate to crates.io..."
          cargo publish --token "$CARGO_REGISTRY_TOKEN"

      - name: Create GitHub deployment record
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Creating deployment record..."
          API_URL="https://api.github.com/repos/${{ github.repository }}/deployments"
          PAYLOAD=$(jq -n --arg ref "${{ github.ref }}" --arg env "crates.io" '{ref: $ref, environment: $env, required_contexts: [], description: "Published crate to crates.io", transient_environment: false}')
          curl -s -S -X POST -H "Authorization: Bearer $GITHUB_TOKEN" -H "Accept: application/vnd.github+json" "$API_URL" -d "$PAYLOAD" | jq '.'
